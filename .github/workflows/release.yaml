name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get version
        id: get_version
        run: |
          VERSION="${GITHUB_REF/v/}"
          echo $VERSION
          echo ""::set-output name=VERSION::$VERSION"
        env:
          GITHUB_REF: ${{ github.ref }}
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.x'
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: |
            Changes in this release
            - First change
            - Second change
          draft: false
          prerelease: false
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel --universal
          twine upload dist/*
      - name: Upload wheel as release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/projectile-${{ steps.get_version.outputs.VERSION }}-py2.py3-none-any.whl
          asset_name: projectile-${{ steps.get_version.outputs.VERSION }}-py2.py3-none-any.whl
          asset_content_type: application/octet-stream
